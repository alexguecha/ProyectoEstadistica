library(GGally)
install.packages("GGally")
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(echo = F)
library(readxl)
library(ggplot2)
library(dplyr)
library(fBasics)
library(MASS)
library(corrgram)
library(gclus)
library(descr)
library(GGally)
library(agricolae)
library(plotly)
install.packages("plotly")
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(echo = F)
library(readxl)
library(ggplot2)
library(dplyr)
library(fBasics)
library(MASS)
library(corrgram)
library(gclus)
library(descr)
library(GGally)
library(agricolae)
library(plotly)
library(fdth)
library(caTools)
library(ROCR)
install.packages("ROCR")
install.packages("pROC")
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(echo = F)
library(readxl)
library(ggplot2)
library(dplyr)
library(fBasics)
library(MASS)
library(corrgram)
library(gclus)
library(descr)
library(GGally)
library(agricolae)
library(plotly)
library(fdth)
library(caTools)
library(ROCR)
library(pROC)
cor(x = BDa2censo$Edad, y = BDa2censo$MontoInversion, method = "pearson")
library(readxl)
BDa2censo <- read_excel("BD_inversionistas_depurada_V6_anonimizada.xlsx")
cor(x = BDa2censo$Edad, y = BDa2censo$MontoInversion, method = "pearson")
cor(x = BDa2censo$IngresosMes, y = BDa2censo$MontoInversion, method = "pearson")
cor(x = BDa2censo$Patrimonio, y = BDa2censo$MontoInversion, method = "pearson")
cor(x = BDa2censo$CantidadInversiones, y = BDa2censo$MontoInversion, method = "pearson")
#cor(x = BDa2censo$CodProposito, y = BDa2censo$MontoInversion, method = "pearson")
#cor(x = BDa2censo$CodProposito, y = BDa2censo$CantidadInversiones, method = "pearson")
#cor(x = BDa2censo$PotencialP2, y = BDa2censo$Edad, method = "pearson")
cor(x = BDa2censo$Edad, y = BDa2censo$CantidadInversiones, method = "pearson")
cor(x = BDa2censo$IngresosMes, y = BDa2censo$CantidadInversiones, method = "pearson")
cor(x = BDa2censo$Patrimonio, y = BDa2censo$CantidadInversiones, method = "pearson")
cor(x = BDa2censo$MontoInversion, y = BDa2censo$CantidadInversiones, method = "pearson")
library(readxl)
Incendios <- read_excel("TallerMuestreo/Incendios.xlsx")
View(Incendios)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
Incendios <- read_excel("TallerMuestreo/Incendios.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
Incendios <- read_excel("Incendios.xlsx")
head(Incendios)
## En el proceso de limpieza se quitaros 2 registros , un dato que corresponde a peru y un dato vacio
dim(Incendios)
N = nrow(Incendios)
## N corresponde a la población total del estudio que son el total de registros
z = qnorm(0.035, mean= 0, sd = 1, lower.tail = TRUE)
##
d = 0.03
n = z*z*0.5*0.5/(d*d+(z*z*0.5*0.5)/N)
n = ceiling(n)
n
set.seed(3564)
muestra_inc <- Incendios [ sample (N, size = n ),]
muestra_inc
MediaH=mean(muestra_inc$HERIDOS)
MediaH
MediaF=mean(muestra_inc$FALLECIDOS)
MediaF
muestra_inc$TotalN <- N
head(muestra_inc)
muestra_inc
library(survey)
mydesign <- svydesign(id = ~1, data = muestra_inc, fpc = ~TotalN)
summary(mydesign)
# Estimaciones
svymean(muestra_inc$HERIDOS,mydesign)
summary(mydesign)
#=========================
VarH=var(muestra_inc$HERIDOS)
VarH
MediaH=mean(muestra_inc$HERIDOS)
MediaH
VarEstim=(1-757/4435)*VarH/757
VarEstim
EE=sqrt(VarEstim)
EE
CV=(EE/MediaH)*100
CV
valort=qt(c(0.025),df=(757-1),lower.tail = FALSE)# probabilidad de cola 0.025 equivle a nivel de confianza del 95%, ya q la dist t es simetrica
Lsup=MediaH+(valort*EE)
Linf=MediaH-(valort*EE)
resumenMediaH1 <- data.frame(n ,MediaH,VarEstim,EE,Linf,Lsup,CV)
resumenMediaH1
#Con un nivel de confianza del 95% el promedio de los heridos de la población va a ser de 0.39
EstimTot=N*MediaF
EstimTot
VarEstimTOT=(N^2)*VarEstim
VarEstimTOT
#El Error Estándar (EE) de la estimación, es:
EETot=sqrt(VarEstimTOT)
EETot
## Calculo de intervalo de confianza al 95%
valortF=qt(c(0.025),df=(757-1),lower.tail = FALSE)# probabilidad de cola 0.025 equivle a nivel de confianza del 95%, ya q la dist t es simetrica
LsupTotF=EstimTot+(valortF*EETot)
LinfTotF=EstimTot-(valortF*EETot)
# El coeficiente de variación de la estimación del Total, es:
CVTot=(EETot/EstimTot)*100
CVTot
resumenTotF <- data.frame(n ,EstimTot,VarEstimTOT,EETot,LinfTotF,LsupTotF,CVTot)
resumenTotF
## Cartografía
library(rgdal)
sp_df <- readOGR(dsn = "C:/Users/Sergio/Downloads/MGN2021_DPTO_POLITICO", layer = "MGN_DPTO_POLITICO")
## Cartografía
library(rgdal)
sp_df <- readOGR(dsn = "/MGN2021_DPTO_POLITICO", layer = "MGN_DPTO_POLITICO")
## Cartografía
library(rgdal)
sp_df <- readOGR(dsn = "MGN2021_DPTO_POLITICO", layer = "MGN_DPTO_POLITICO")
head(sp_df)
#fix(sp_df)
as.data.frame(sp_df)
DPTO_SH="/MGN_DPTO_POLITICO.shp"
DPTO_SH2 <- st_read(DPTO_SH)
## Cartografía
library(rgdal)
sp_df <- readOGR(dsn = "MGN2021_DPTO_POLITICO", layer = "MGN_DPTO_POLITICO")
#head(sp_df)
#fix(sp_df)
#as.data.frame(sp_df)
DPTO_SH="MGN_DPTO_POLITICO.shp"
DPTO_SH2 <- st_read(DPTO_SH)
## Cartografía
library(rgdal)
library(sf)
sp_df <- readOGR(dsn = "MGN2021_DPTO_POLITICO", layer = "MGN_DPTO_POLITICO")
#head(sp_df)
#fix(sp_df)
#as.data.frame(sp_df)
DPTO_SH="MGN_DPTO_POLITICO.shp"
DPTO_SH2 <- st_read(DPTO_SH)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
Incendios <- read_excel("Incendios.xlsx")
## Cartografía
library(rgdal)
library(sf)
sp_df <- readOGR(dsn = "MGN2021_DPTO_POLITICO", layer = "MGN_DPTO_POLITICO")
#head(sp_df)
#fix(sp_df)
#as.data.frame(sp_df)
DPTO_SH="MGN_DPTO_POLITICO.shp"
DPTO_SH2 <- st_read(DPTO_SH)
## Cartografía
library(rgdal)
library(sf)
sp_df <- readOGR(dsn = "MGN2021_DPTO_POLITICO", layer = "MGN_DPTO_POLITICO")
#head(sp_df)
#fix(sp_df)
#as.data.frame(sp_df)
DPTO_SH="MGN2021_DPTO_POLITICO/MGN_DPTO_POLITICO.shp"
DPTO_SH2 <- st_read(DPTO_SH)
library(raster)
library(readxl)
library(writexl)
write_xlsx(LocalidadEXCEL,"LocalidadEXCEL.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(raster)
library(readxl)
library(writexl)
library(leaflet)
library(dplyr)
library(sf)
library(tmap)
library(tigris)
library(dplyr)
library(tidyr)
library(rgdal)
library(sf)
library(survey)
Incendios <- read_excel("Incendios.xlsx")
## Cartografía
sp_df <- readOGR(dsn = "MGN2021_DPTO_POLITICO", layer = "MGN_DPTO_POLITICO")
#head(sp_df)
#fix(sp_df)
#as.data.frame(sp_df)
DPTO_SH="MGN2021_DPTO_POLITICO/MGN_DPTO_POLITICO.shp"
DPTO_SH2 <- st_read(DPTO_SH)
HeridosDepto <- muestra_inc %>%
group_by(DEPARTAMENTO) %>%
summarise(promedioH = mean(HERIDOS),COD_DANE)
# Para visualizar la base resumida
ResumenH=as.data.frame(HeridosDepto)
ResumenH
Etiquetas=unite(ResumenH, Etiqueta,c(1,2), sep = ": ", remove = TRUE)
Etiquetas=Etiquetas[,1]
Etiquetas
Resumen3=cbind(ResumenH, Etiquetas )
Resumen3
DPTO_SH2
DPTO_JOIN <- geo_join(DPTO_SH2, Resumen3,"DPTO_CCDGO", "COD_DANE")
#DPTO_JOIN = as.data.frame(DPTO_JOIN)
DPTO_JOIN
pal <- colorNumeric( palette = "RdYlBu", domain=DPTO_JOIN$promedioH)  #palette = "YlGnBu"   "RdBu"  "RdYlBu"  "Spectral"  "Paired"  "PuRd"  "RdYlGn"
leaflet(sp_df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(color = ~pal(DPTO_JOIN$promedioH),
stroke = FALSE, fillOpacity = 1.0)  # Este parámetro proporciona opacidad en el mapa (Valores esntre 0 y 1)
popup_sb <- paste0("Promedio de Heridos: ", as.character(DPTO_JOIN$promedioH))
leaflet(sp_df) %>%
addProviderTiles("CartoDB.Positron") %>%
#setView(-98.483330, 38.712046, zoom = 4) %>%
addPolygons(data = DPTO_JOIN ,
fillColor = ~pal(DPTO_JOIN$promedioH),
opacity = 1,
color = "black",
dashArray = "3",fillOpacity = 0.9,
highlight = highlightOptions(
weight = 1,
color = "#666",
dashArray = "",
fillOpacity = 1,
bringToFront = TRUE),
label = DPTO_JOIN$Etiquetas,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))%>%
addLegend(pal = pal, values =DPTO_JOIN$promedioH, opacity = 0.7, title = NULL,
position = "bottomright")
## Cartografía
sp_df <- readOGR(dsn = "MGN2021_DPTO_POLITICO", layer = "MGN_DPTO_POLITICO")
#head(sp_df)
#fix(sp_df)
#as.data.frame(sp_df)
DPTO_SH="MGN2021_DPTO_POLITICO/MGN_DPTO_POLITICO.shp"
DPTO_SH2 <- st_read(DPTO_SH)
HeridosDepto <- muestra_inc %>%
group_by(DEPARTAMENTO) %>%
summarise(promedioH = mean(HERIDOS),COD_DANE)
# Para visualizar la base resumida
ResumenH=as.data.frame(HeridosDepto)
ResumenH
Etiquetas=unite(ResumenH, Etiqueta,c(1,2), sep = ": ", remove = TRUE)
Etiquetas=Etiquetas[,1]
Etiquetas
Resumen3=cbind(ResumenH, Etiquetas )
Resumen3
DPTO_SH2
DPTO_JOIN <- geo_join(DPTO_SH2, Resumen3,"DPTO_CCDGO", "COD_DANE")
#DPTO_JOIN = as.data.frame(DPTO_JOIN)
DPTO_JOIN
pal <- colorNumeric( palette = "RdYlBu", domain=DPTO_JOIN$promedioH)  #palette = "YlGnBu"   "RdBu"  "RdYlBu"  "Spectral"  "Paired"  "PuRd"  "RdYlGn"
popup_sb <- paste0("Promedio de Heridos: ", as.character(DPTO_JOIN$promedioH))
leaflet(sp_df) %>%
addProviderTiles("CartoDB.Positron") %>%
#setView(-98.483330, 38.712046, zoom = 4) %>%
addPolygons(data = DPTO_JOIN ,
fillColor = ~pal(DPTO_JOIN$promedioH),
opacity = 1,
color = "black",
dashArray = "3",fillOpacity = 0.9,
highlight = highlightOptions(
weight = 1,
color = "#666",
dashArray = "",
fillOpacity = 1,
bringToFront = TRUE),
label = DPTO_JOIN$Etiquetas,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))%>%
addLegend(pal = pal, values =DPTO_JOIN$promedioH, opacity = 0.7, title = NULL,
position = "bottomright")
library(readxl)
Incendios <- read_excel("TallerMuestreo/Incendios.xlsx")
View(Incendios)
install.packages("raster")
install.packages("writexl")
install.packages("leaflet")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(raster)
install.packages("dplyr")
install.packages("sf")
install.packages("tmap")
install.packages("tigris")
install.packages("dplyr")
install.packages("tidyr")
install.packages("rgdal")
install.packages("survey")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(raster)
library(readxl)
library(writexl)
library(leaflet)
library(dplyr)
library(sf)
library(tmap)
library(tigris)
library(dplyr)
library(tidyr)
library(rgdal)
library(survey)
Incendios <- read_excel("Incendios.xlsx")
install.packages("plot3Drgl")
install.packages("plot3D")
install.packages("fBasics")
install.packages("corrgram")
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(echo = F)
library(readxl)
library(ggplot2)
library(dplyr)
library(fBasics)
library(MASS)
library(corrgram)
library(gclus)
install.packages("gclus")
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(echo = F)
library(readxl)
library(ggplot2)
library(dplyr)
library(fBasics)
library(MASS)
library(corrgram)
library(gclus)
library(descr)
install.packages("descr")
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(echo = F)
library(readxl)
library(ggplot2)
library(dplyr)
library(fBasics)
library(MASS)
library(corrgram)
library(gclus)
library(descr)
library(GGally)
install.packages("GGally")
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(echo = F)
library(readxl)
library(ggplot2)
library(dplyr)
library(fBasics)
library(MASS)
library(corrgram)
library(gclus)
library(descr)
library(GGally)
library(agricolae)
install.packages("agricolae")
install.packages("plotly")
install.packages("fdth")
install.packages("caTools")
install.packages("ROCR")
install.packages("pROC")
install.packages("car")
install.packages("foreign")
install.packages("apaTables")
install.packages("PerformanceAnalytics")
install.packages("psych")
install.packages("corrr")
install.packages("igraph")
install.packages("gvlma")
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(echo = F)
library(readxl)
library(ggplot2)
library(dplyr)
library(fBasics)
library(MASS)
library(corrgram)
library(gclus)
library(descr)
library(GGally)
library(agricolae)
library(plotly)
library(fdth)
library(caTools)
library(ROCR)
library(pROC)
library(car)
library(foreign)
library(apaTables)
library(PerformanceAnalytics)
library(psych)
library(corrr)
library(igraph)
library(corrgram)
library(gclus)
library(GGally)
library(gvlma)
library(readxl)
BD_inversionistas_depurada_V6_anonimizada <- read_excel("Sergio/BD inversionistas depurada V6 anonimizada.xlsx")
View(BD_inversionistas_depurada_V6_anonimizada)
install.packages("ggfortify")
install.packages("lmtest")
install.packages("fdth")
install.packages("caTools")
install.packages("magrittr")
install.packages("InformationValue")
install.packages("rgdal")
install.packages("sf")
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(echo = F)
library(readxl)
library(ggplot2)
library(dplyr)
library(fBasics)
library(MASS)
library(corrgram)
library(gclus)
library(descr)
library(GGally)
library(agricolae)
library(plotly)
library(fdth)
library(caTools)
library(ROCR)
library(pROC)
library(car)
library(foreign)
library(apaTables)
library(PerformanceAnalytics)
library(psych)
library(corrr)
library(igraph)
library(corrgram)
library(gclus)
library(GGally)
library(gvlma)
library(plot3D)
library(plot3Drgl)
z<-BDa2censo$MontoInversion
library(readxl)
BDa2censo <- read_excel("Sergio/BD inversionistas depurada V6 anonimizada.xlsx")
View(BDa2censo)
negPredValue(training$Inv_Recurrente,predict, threshold = optCutOff)
library(fdth)
library(caTools)
library(ROCR)
library(pROC)
library(magrittr)
library(InformationValue)
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(echo = F)
library(readxl)
library(ggplot2)
library(dplyr)
library(fBasics)
library(MASS)
library(corrgram)
library(gclus)
library(descr)
library(GGally)
library(agricolae)
library(plotly)
library(fdth)
library(caTools)
library(ROCR)
library(pROC)
library(car)
install.packages("car")
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(echo = F)
library(readxl)
library(ggplot2)
library(dplyr)
library(fBasics)
library(MASS)
library(corrgram)
library(gclus)
library(descr)
library(GGally)
library(agricolae)
library(plotly)
library(fdth)
library(caTools)
library(ROCR)
library(pROC)
library(car)
